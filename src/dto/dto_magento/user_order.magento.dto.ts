export class UserOrderMagentoDto {
  base_currency_code: string;
  base_discount_amount: number;
  base_discount_invoiced: number;
  base_grand_total: number;
  base_discount_tax_compensation_amount: number;
  base_discount_tax_compensation_invoiced: number;
  base_shipping_amount: number;
  base_shipping_discount_amount: number;
  base_shipping_discount_tax_compensation_amnt: number;
  base_shipping_incl_tax: number;
  base_shipping_invoiced: number;
  base_shipping_tax_amount: number;
  base_subtotal: number;
  base_subtotal_incl_tax: number;
  base_subtotal_invoiced: number;
  base_tax_amount: number;
  base_tax_invoiced: number;
  base_total_due: number;
  base_total_invoiced: number;
  base_total_invoiced_cost: number;
  base_total_paid: number;
  base_to_global_rate: number;
  base_to_order_rate: number;
  billing_address_id: number;
  created_at: string;
  customer_email: string;
  customer_firstname: string;
  customer_group_id: number;
  customer_id: number;
  customer_is_guest: number;
  customer_lastname: string;
  customer_note_notify: number;
  discount_amount: number;
  discount_invoiced: number;
  email_sent: number;
  entity_id: number;
  global_currency_code: string;
  grand_total: number;
  discount_tax_compensation_amount: number;
  discount_tax_compensation_invoiced: number;
  increment_id: string;
  is_virtual: number;
  order_currency_code: string;
  protect_code: string;
  quote_id: number;
  remote_ip: string;
  shipping_amount: number;
  shipping_description: string;
  shipping_discount_amount: number;
  shipping_discount_tax_compensation_amount: number;
  shipping_incl_tax: number;
  shipping_invoiced: number;
  shipping_tax_amount: number;
  state: string;
  status: string;
  store_currency_code: string;
  store_id: number;
  store_name: string;
  store_to_base_rate: number;
  store_to_order_rate: number;
  subtotal: number;
  subtotal_incl_tax: number;
  subtotal_invoiced: number;
  tax_amount: number;
  tax_invoiced: number;
  total_due: number;
  total_invoiced: number;
  total_item_count: number;
  total_paid: number;
  total_qty_ordered: number;
  updated_at: string;
  weight: number;
  x_forwarded_for: string;
}
